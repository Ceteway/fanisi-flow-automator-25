-- Step 1: Remove all existing system templates
DELETE FROM public.system_templates;

-- Step 2: Insert the new HTML Agreement to Lease template
INSERT INTO public.system_templates (
  name,
  description,
  category,
  file_name,
  content_type,
  file_data,
  is_active,
  uploaded_by
) VALUES (
  'Agreement to Lease - Fillable Template',
  'Professional fillable HTML template for Agreement to Lease between Landlord and Safaricom PLC. Includes all standard clauses, rent schedules, and signature sections.',
  'agreements',
  'agreement_to_lease_template.html',
  'text/html',
  decode('', 'base64'),
  true,
  NULL
);